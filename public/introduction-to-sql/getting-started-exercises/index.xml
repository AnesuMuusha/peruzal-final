<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Getting-started-exercises on Introduction to SQL</title>
    <link>http://guides.peruzal.com/introduction-to-sql/getting-started-exercises/index.xml</link>
    <description>Recent content in Getting-started-exercises on Introduction to SQL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright 2017 Peruzal</copyright>
    <lastBuildDate>Mon, 13 Mar 2017 17:05:09 +0200</lastBuildDate>
    <atom:link href="http://guides.peruzal.com/introduction-to-sql/getting-started-exercises/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Getting Started Exercises</title>
      <link>http://guides.peruzal.com/introduction-to-sql/getting-started-exercises/</link>
      <pubDate>Mon, 13 Mar 2017 17:05:09 +0200</pubDate>
      
      <guid>http://guides.peruzal.com/introduction-to-sql/getting-started-exercises/</guid>
      <description>

&lt;h2 id=&#34;checking-sql-server-version&#34;&gt;Checking SQL Server Version&lt;/h2&gt;

&lt;p&gt;To check the SQL Server version you use the global system configuration function &lt;code&gt;@@VERSION&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT @@VERSION;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;checking-the-database-name&#34;&gt;Checking the Database Name&lt;/h2&gt;

&lt;p&gt;To find the database name you use the &lt;code&gt;DB_NAME()&lt;/code&gt; function :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DB_NAME()
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;database-id&#34;&gt;Database ID&lt;/h2&gt;

&lt;p&gt;To get the database id use the &lt;code&gt;DB_ID()&lt;/code&gt; function.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;select DB_ID()
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;checking-your-username&#34;&gt;Checking Your Username&lt;/h2&gt;

&lt;p&gt;You can check the username you are logged in to SQL using the &lt;code&gt;ORIGINAL_LOGIN()&lt;/code&gt;, &lt;code&gt;CURRENT_USER&lt;/code&gt;, &lt;code&gt;SYSTEM_USER&lt;/code&gt; functions as follows :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT ORIGINAL_LOGIN(), CURRENT_USER, SYSTEM_USER;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;analysis&#34;&gt;Analysis&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;ORIGINAL_LOGIN()&lt;/code&gt; will show the username used to log in to SQL Server. The &lt;code&gt;CURRENT_USER&lt;/code&gt; is the database user current used to run queries to which the ORIGINAL_LOGIN is mapped to. The &lt;code&gt;SYSTEM_USER&lt;/code&gt; shows the impersonated user. When running queries using the &lt;code&gt;EXECUTE AS&lt;/code&gt;, the SYSTEM_USER will show the user that is being impersonated.&lt;/p&gt;

&lt;p&gt;## Listing the Available Tables&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;INFORMATION_SCHEMA&lt;/code&gt;  views used to to get the information about the tables and views. This is an ISO standard approach.&lt;/p&gt;

&lt;p&gt;The following would return all the tables in the current database.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT * FROM INFORMATION_SCHEMA.TABLES
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can all use the system views to get all tables in the database as follows :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT * FROM sys.tables
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;find-all-schemas-owned-by-a-specific-schema&#34;&gt;Find all schemas owned by a specific schema&lt;/h3&gt;

&lt;p&gt;We can find all schema owned by a specific user as follows :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT name
FROM sys.tables
WHERE SCHEMA_NAME(schema_id) = &#39;HumanResources&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The system catalog tables are not as friendly as the information schema and may not provide all the information you require, e.g instead of return the schema name they return the _schema&lt;em&gt;id&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;check-the-existence-of-a-condition&#34;&gt;Check the existence of a condition&lt;/h2&gt;

&lt;p&gt;We can use the EXISTS keyword to check for a condition without returning the data that proves the condition, e.g :
to find if we have employees that took more than 40 hours of sick leave without knowing who exactly are the employees we can use the following query.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT 1
WHERE  EXISTS (
   SELECT *
   FROM HumanResources.Employee
   WHERE SickLeaveHours &amp;gt; 40
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or we could also have used :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT TOP(1) 1
FROM HumanResources.Employee 
WHERE SickLeaveHours &amp;gt; 40
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;sorting-nulls-high-or-low&#34;&gt;Sorting Nulls High or Low&lt;/h2&gt;

&lt;p&gt;Add a semaphore expression to your &lt;strong&gt;ORDER BY&lt;/strong&gt; clause for the column in question. Then specify &lt;strong&gt;ASC&lt;/strong&gt; or &lt;strong&gt;DSC&lt;/strong&gt; to make the nulls sort first or last as desired. The following example adds such an expression for the Weight column in order to sort that column with nulls last.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT  ProductID, Name, Weight
FROM    Production.Product
ORDER BY ISNULL(Weight, 1) DESC, Weight;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;ISNULL&lt;/code&gt; function takes in a value and if its null returns another value. In our case we return 1.&lt;/p&gt;

&lt;p&gt;Another way is to use the &lt;code&gt;IIF&lt;/code&gt; function as follows :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT  ProductID, Name, Weight
FROM    Production.Product
ORDER BY IIF(Weight IS NULL, 1, 0), Weight;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;getting-a-sample-of-the-table-data&#34;&gt;Getting a Sample of the Table Data&lt;/h2&gt;

&lt;p&gt;You can use the TABLESAMPLE keyword to get a sample of the data in a table. You can use a percent or the number of rows as follows :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT *
FROM Purchasing.PurchaseOrderHeader
TABLESAMPLE (5 PERCENT);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or using rows :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT *
FROM Purchasing.PurchaseOrderHeader
TABLESAMPLE (200 ROWS);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>