<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Updating-data on Introduction to SQL</title>
    <link>http://guides.peruzal.com/introduction-to-sql/updating-data/index.xml</link>
    <description>Recent content in Updating-data on Introduction to SQL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright 2017 Peruzal</copyright>
    <lastBuildDate>Tue, 28 Feb 2017 21:52:09 +0200</lastBuildDate>
    <atom:link href="http://guides.peruzal.com/introduction-to-sql/updating-data/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Updating Data</title>
      <link>http://guides.peruzal.com/introduction-to-sql/updating-data/</link>
      <pubDate>Tue, 28 Feb 2017 21:52:09 +0200</pubDate>
      
      <guid>http://guides.peruzal.com/introduction-to-sql/updating-data/</guid>
      <description>

&lt;h2 id=&#34;updating-data&#34;&gt;Updating Data&lt;/h2&gt;

&lt;p&gt;To update (modify) data in a table the UPDATE statement is used. UPDATE can be used in two ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To update specific rows in a table&lt;/li&gt;
&lt;li&gt;To update all rows in a table&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;admonition warning&#34;&gt;
&lt;p class=&#34;admonition-title&#34;&gt;Caution: Don’t Omit the WHERE Clause&lt;/p&gt;
&lt;p&gt;Special care must be exercised when using UPDATE, because it is all too easy to mistakenly update every row in your table. Please read this entire section on UPDATE before using this statement.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Let’s take a look at a simple example. Customer 1000000005 has no e-mail address on file and now has an address, and so that record needs updating. The following statement performs this update:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;UPDATE Customers
SET cust_email = &#39;kim@thetoystore.com&#39;
WHERE cust_id = &#39;1000000005&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The UPDATE statement always begins with the name of the table being updated. In this example, it is the Customers table. The SET command is then used to assign the new value to a column. As used here, the SET clause sets the cust_email column to the specified value:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SET cust_email = &#39;kim@thetoystore.com&#39;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The UPDATE statement finishes with a WHERE clause that tells the DBMS which row to update. Without a WHERE clause, the DBMS would update all the rows in the Customers table with this new e-mail address—definitely not the desired effect.&lt;/p&gt;

&lt;p&gt;Updating multiple columns requires a slightly different syntax:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;UPDATE Customers
SET cust_contact = &#39;Sam Roberts&#39;,
    cust_email = &#39;sam@toyland.com&#39;
WHERE cust_id = &#39;1000000006&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When updating multiple columns, only a single SET command is used, and each column = value pair is separated by a comma. (No comma is specified after the last column.) In this example, columns cust_contact and cust_email will both be updated for customer 1000000006.&lt;/p&gt;

&lt;p&gt;To delete a column’s value, you can set it to NULL (assuming the table is defined to allow NULL values). You can do this as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;UPDATE Customers
SET cust_email = NULL
WHERE cust_id = &#39;1000000005&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here the NULL keyword is used to save no value to the &lt;em&gt;cust_email&lt;/em&gt; column. That is very different from saving an empty string—an empty string (specified as &amp;ldquo;) is a value, whereas NULL means that there is no value at all.&lt;/p&gt;

&lt;h2 id=&#34;guidelines-for-updating-and-deleting-data&#34;&gt;Guidelines for Updating and Deleting Data&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;UPDATE&lt;/strong&gt; and &lt;strong&gt;DELETE&lt;/strong&gt; statements used in the previous section all have &lt;strong&gt;WHERE&lt;/strong&gt; clauses, and there is a very good reason for this. If you omit the &lt;strong&gt;WHERE&lt;/strong&gt; clause, the &lt;strong&gt;UPDATE&lt;/strong&gt; or &lt;strong&gt;DELETE&lt;/strong&gt; will be applied to every row in the table. In other words, if you execute an &lt;strong&gt;UPDATE&lt;/strong&gt; without a &lt;strong&gt;WHERE&lt;/strong&gt; clause, every row in the table will be updated with the new values. Similarly if you execute &lt;strong&gt;DELETE&lt;/strong&gt; without a &lt;strong&gt;WHERE&lt;/strong&gt; clause, all the contents of the table will be deleted&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>